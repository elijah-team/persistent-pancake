
plugins {
    id 'java-library'
    id 'maven-publish'

    id 'idea'

    id 'groovy'

    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
}

repositories {
    mavenLocal()
    maven {url = uri("https://gitlab.com/api/v4/projects/10309690/packages/maven"); name='1'}
    maven {url = uri("https://gitlab.com/api/v4/projects/20346374/packages/maven"); name='2'}
    maven {url = uri("https://gitlab.com/api/v4/projects/21223510/packages/maven"); name='3'}

    // same??
//    maven {url = uri("https://repo.maven.apache.org/maven2/")}
    mavenCentral()

    // Spock snapshots are available from the Sonatype OSS snapshot repository
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.7.2'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.9.22'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Spock Groovy Junit5
    // mandatory dependencies for using Spock
    implementation platform('org.apache.groovy:groovy-bom:4.0.15')
    implementation 'org.apache.groovy:groovy'
    testImplementation platform("org.spockframework:spock-bom:2.3-groovy-4.0")
    testImplementation "org.spockframework:spock-core"
//    testImplementation "org.spockframework:spock-junit4"  // you can remove this if your code does not rely on old JUnit 4 rules


    // optional dependencies for using Spock
    testImplementation "org.hamcrest:hamcrest-core:2.2"   // only necessary if Hamcrest matchers are used
//    testRuntimeOnly 'net.bytebuddy:byte-buddy:1.14.8' // allows mocking of classes (in addition to interfaces)
//    testRuntimeOnly "org.objenesis:objenesis:3.3"      // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)

//    // dependencies used by examples in this project (https://github.com/spockframework/spock-example/blob/master/build.gradle)
//    testRuntimeOnly "com.h2database:h2:2.2.222"
//    implementation "org.apache.groovy:groovy-sql"


    testImplementation "org.junit.jupiter:junit-jupiter:5.10.1"

    // undertow
    api("com.squareup.okhttp3:okhttp:4.10.0")
    api("com.codahale.metrics:metrics-healthchecks:3.0.2")
    api("com.codahale.metrics:metrics-core:3.0.2")
    api('org.jooq:jool:0.9.15')
    api("org.hashids:hashids:1.0.3")
    api("com.typesafe:config:1.4.2")
    api('com.fasterxml.jackson.core:jackson-databind:2.15.1')

    // ??
    api('io.undertow:undertow-servlet:2.3.6.Final')
    api('io.undertow:undertow-core:2.3.4.Final')

    // mal
    api('org.apache.commons:commons-lang3:3.12.0')
    api('net.java.dev.jna:jna:5.12.1')

    api('me.friwi:jcefmaven:110.0.25')

    api('org.reactivestreams:reactive-streams:1.0.4')
    api('io.reactivex.rxjava3:rxjava:3.1.6')

    api("commons-codec:commons-codec:1.15")

    api('org.slf4j:slf4j-simple:2.0.5')

    api("org.jdeferred.v2:jdeferred-core:2.0.0")

    api('org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.600')
    api('org.jetbrains:annotations:24.0.1')
    api('com.github.spotbugs:spotbugs-annotations:4.7.3')

    api("antlr:antlr:2.7.7")

    api("commons-cli:commons-cli:1.4")

    api('com.google.guava:guava:31.1-jre')

    api("tripleo.buffers:buffers-v1:0.0.3")
    api("tripleo.util.range:range-v1:0.0.3b")

    testImplementation("org.easymock:easymock:5.1.0")
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

sourceSets {
    main {
        java {
            srcDirs = [
                'tripleo-small/src/main/java'
                ,'elijah-util/src/main/java'
                ,'elijah-good-api/src/main/java'
                ,'elijah-ek/src/main/java'
                ,'src-mal/src/main/java'
                ,'src/main/java'
                ,'src-undertow/src/main/java'
//              ,'src-cef/src/main/java'
            ]
        }
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

group = "tripleo.elijah"
version = "2023.10.0-wont-stop"
description = "elijah-persistent-pancake"
//java.sourceCompatibility = JavaVersion.VERSION_17

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
kotlin {
	jvmToolchain(16)
}
